#!/usr/bin/env sh

set -eu

. "$(dirname "$0")/git-istash-commons"

print_help() {
	printf 'git istash push - Improved version of "git stash push" that can handle orphan\n    branches.\n'
	printf '\n'
	printf 'This is only a rudimentary help text. Prefer "git help istash" if available.\n'
	printf '\n'
	printf 'Usage: git istash push [<option>...]\n'
	printf '   or: git istash push -h\n'
	printf '\n'
	printf 'Options:\n'
	printf '    -a, --all\t\t- Stash and clean also untracked and ignored files.\n'
	printf '\t--allow-empty\t- Create a stash even if there are no suitable changes.\n'
	printf '    -h\t\t\t- Show this help text and exit.\n'
	printf '    -k, --keep-index\t- Left intact all changes already added to the index.\n'
	printf '\t--no-keep-index\t- Cancel "--keep-index".\n'
	printf '    -l, --leave-staged\t- Left intact all changes already added to the index\n\t\t\t  and don'\''t add them to stash.\n'
	printf '    -m, --message=MSG\t- Set stash description.\n'
	printf '\t--patch\t\t- Interactively select non-staged chunks to stash.\n'
	printf '\t--pathspec-from-file=FILE - Read pathspec from the specified file.\n'
	printf '\t--pathspec-file-nul - Treat the pathspec file as NUL-separated.\n\t\t\t  (Only valid with "--pathspec-from-file".)\n'
	printf '    -S, --staged\t- Left intact all changes NOT already added to the index\n\t\t\t  and don'\''t add them to stash.\n'
	printf '    -u, --include-untracked - Stash and clean also untracked files.\n'
	printf '\t--no-include-untracked - Do not touch untracked files even with "--all".\n'
}

check_pathspec_for_implicit_push() ( # args...
	getopt_result="$(getopt -o"-$getopt_short_options" --long="$getopt_long_options" -n"$(basename "$0")" -ssh -- "$@")"
	eval set -- "$getopt_result"
	while [ $# -ne 0 ]
	do
		if [ "$1" = '--' ]
		then
			break
		elif printf '%s' "$1" | grep -Eq '^--'
		then
			option_name="$(printf '%s' "$1" | sed -E 's/^--//')"
			shift
			if printf '%s' "$getopt_long_options" | grep -Eq "(^|,)$option_name:(,|\$)"
			then
				shift
			fi
		elif printf '%s' "$1" | grep -Eq '^-'
		then
			option_letter="$(printf '%s' "$1" | sed -E 's/^-//')"
			shift
			if printf '%s' "$getopt_short_options" | grep -Eq "$option_letter:"
			then
				shift
			fi
		else
			printf 'fatal: unexpected token "%s"\n' "$1" 1>&2
			printf 'fatal: pathspec for an implicit "push" command must be preceded by "--"\n' 1>&2
			exit 1
		fi
	done
)

set_getopt_options_from_make_command
if [ "${1+"$1"}" = '--_implicit-push_' ]
then
	shift
	check_pathspec_for_implicit_push "$@"
fi
if check_for_option_h_in_make_command "$@"
then
	print_help
	exit 0
fi

exec sh "$(dirname "$0")/git-istash-make-stash" --remove-stashed "$@"
